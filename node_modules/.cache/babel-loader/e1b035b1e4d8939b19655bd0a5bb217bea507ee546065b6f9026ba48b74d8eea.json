{"ast":null,"code":"var _jsxFileName = \"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/ToMesh.tsx\",\n  _s = $RefreshSig$();\nimport \"./styles/ToMesh.css\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { BrowserView, MobileOnlyView } from \"react-device-detect\";\nimport Desktop_Title from \"modules/toMesh/components/TMIntro\";\nimport Header from \"modules/toMesh/components/TMTitle\";\nimport { messaging } from \"modules/toMesh/notification/settingFCM\";\nimport { registerServiceWorker } from \"modules/toMesh/notification/notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function handleAllowNotification() {\n  const permission = await Notification.requestPermission();\n  registerServiceWorker();\n}\nasync function getDeviceToken() {\n  const token = await getToken(messaging, {\n    vapidKey: import.meta.env.VITE_APP_VAPID_KEY\n  });\n  setDeviceToken({\n    token: token\n  });\n}\nconst ToMesh = () => {\n  _s();\n  const [deviceToken, setDeviceToken] = useState({\n    token: \"\"\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BrowserView, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(Desktop_Title, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MobileOnlyView, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(Desktop_Title, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ToMesh, \"JDLpchGn+tBDOwZmWcj6hLLJXWA=\");\n_c = ToMesh;\nexport default ToMesh;\nvar _c;\n$RefreshReg$(_c, \"ToMesh\");","map":{"version":3,"names":["React","useState","BrowserView","MobileOnlyView","Desktop_Title","Header","messaging","registerServiceWorker","jsxDEV","_jsxDEV","Fragment","_Fragment","handleAllowNotification","permission","Notification","requestPermission","getDeviceToken","token","getToken","vapidKey","import","meta","env","VITE_APP_VAPID_KEY","setDeviceToken","ToMesh","_s","deviceToken","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/ToMesh.tsx"],"sourcesContent":["import \"./styles/ToMesh.css\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { BrowserView, MobileOnlyView } from \"react-device-detect\";\nimport Desktop_Title from \"modules/toMesh/components/TMIntro\";\nimport Header from \"modules/toMesh/components/TMTitle\";\nimport { messaging, app } from \"modules/toMesh/notification/settingFCM\";\nimport { registerServiceWorker } from \"modules/toMesh/notification/notification\";\n\nasync function handleAllowNotification() {\n  const permission = await Notification.requestPermission();\n  registerServiceWorker();\n}\n\nasync function getDeviceToken() {\n  const token = await getToken(messaging, {\n    vapidKey: import.meta.env.VITE_APP_VAPID_KEY,\n  });\n\n  setDeviceToken({\n    token: token,\n  });\n}\n\nconst ToMesh = () => {\n  const [deviceToken, setDeviceToken] = useState<AppCheckTokenResult>({\n    token: \"\",\n  });\n\n  return (\n    <>\n      <Header></Header>\n      <BrowserView>\n        <h1>\n          <Desktop_Title />\n        </h1>\n      </BrowserView>\n      <MobileOnlyView>\n        <h1>\n          <Desktop_Title />\n        </h1>\n      </MobileOnlyView>\n    </>\n  );\n};\n\nexport default ToMesh;\n"],"mappings":";;AAAA,OAAO,qBAAqB;AAC5B,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,cAAc,QAAQ,qBAAqB;AACjE,OAAOC,aAAa,MAAM,mCAAmC;AAC7D,OAAOC,MAAM,MAAM,mCAAmC;AACtD,SAASC,SAAS,QAAa,wCAAwC;AACvE,SAASC,qBAAqB,QAAQ,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjF,eAAeC,uBAAuBA,CAAA,EAAG;EACvC,MAAMC,UAAU,GAAG,MAAMC,YAAY,CAACC,iBAAiB,CAAC,CAAC;EACzDR,qBAAqB,CAAC,CAAC;AACzB;AAEA,eAAeS,cAAcA,CAAA,EAAG;EAC9B,MAAMC,KAAK,GAAG,MAAMC,QAAQ,CAACZ,SAAS,EAAE;IACtCa,QAAQ,EAAEC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC;EAC5B,CAAC,CAAC;EAEFC,cAAc,CAAC;IACbP,KAAK,EAAEA;EACT,CAAC,CAAC;AACJ;AAEA,MAAMQ,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,WAAW,EAAEH,cAAc,CAAC,GAAGvB,QAAQ,CAAsB;IAClEgB,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,oBACER,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA,CAACJ,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACjBvB,OAAA,CAACP,WAAW;MAAA0B,QAAA,eACVnB,OAAA;QAAAmB,QAAA,eACEnB,OAAA,CAACL,aAAa;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC,eACdvB,OAAA,CAACN,cAAc;MAAAyB,QAAA,eACbnB,OAAA;QAAAmB,QAAA,eACEnB,OAAA,CAACL,aAAa;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC;EAAA,eACjB,CAAC;AAEP,CAAC;AAACN,EAAA,CApBID,MAAM;AAAAQ,EAAA,GAANR,MAAM;AAsBZ,eAAeA,MAAM;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}