{"ast":null,"code":"var _jsxFileName = \"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/photoBooth/components/desktopBooth.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport React from \"react\";\nimport \"./desktopBooth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Desktop_Booth() {\n  _s();\n  const [myImage, setMyImage] = useState([]);\n  const addImage = e => {\n    const nowSelectImageList = e.target.files;\n    //한번에 받은 파일리스트 (object)\n    const nowImageURLList = [...myImage]; // 현재 myImage 복사하고\n    for (let i = 0; i < nowSelectImageList.length; i += 1) {\n      //nowselectImageList object를 1를 이용해서 돌리면서\n      const nowImageUrl = URL.createObjectURL(nowSelectImageList[i]);\n      //미리보기 가능하게 변수화\n      nowImageURLList.push(nowImageUrl);\n      //복사한 myImage에 추가\n    }\n\n    const handleDeleteImage = id => {\n      setShowImages(showImages.filter((_, index) => index !== id));\n    };\n    setMyImage(nowImageURLList);\n    //MyImage원본에 덮어씌우기\n  };\n\n  for (let i = 0; i < myImage.length; i++) {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: \"white\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"input-file\",\n      className: \"OOTDWrite-input-file\",\n      onChange: addImage,\n      children: [\"Add your photo\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: \"multiple\",\n        id: \"input-file\",\n        style: {\n          display: \"none\"\n        },\n        accept: \".jpg, .jpeg, .png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview\",\n      style: {},\n      children: myImage.map((image, id) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: `${image}-${id}`,\n          style: {\n            height: 300\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Try\",\n          style: {\n            width: 20\n          },\n          onClick: () => {\n            handleDeleteImage(id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Desktop_Booth, \"wI8hVCNmapxUGQbdSjmWYfEWTRc=\");\n_c = Desktop_Booth;\nexport default Desktop_Booth;\nvar _c;\n$RefreshReg$(_c, \"Desktop_Booth\");","map":{"version":3,"names":["useState","React","jsxDEV","_jsxDEV","Fragment","_Fragment","Desktop_Booth","_s","myImage","setMyImage","addImage","e","nowSelectImageList","target","files","nowImageURLList","i","length","nowImageUrl","URL","createObjectURL","push","handleDeleteImage","id","setShowImages","showImages","filter","_","index","style","color","children","htmlFor","className","onChange","type","multiple","display","accept","fileName","_jsxFileName","lineNumber","columnNumber","map","image","src","alt","height","value","width","onClick","_c","$RefreshReg$"],"sources":["/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/photoBooth/components/desktopBooth.js"],"sourcesContent":["import { useState } from \"react\";\nimport React from \"react\";\nimport \"./desktopBooth.css\";\n\nfunction Desktop_Booth() {\n  const [myImage, setMyImage] = useState([]);\n  const addImage = (e) => {\n    const nowSelectImageList = e.target.files;\n    //한번에 받은 파일리스트 (object)\n    const nowImageURLList = [...myImage]; // 현재 myImage 복사하고\n    for (let i = 0; i < nowSelectImageList.length; i += 1) {\n      //nowselectImageList object를 1를 이용해서 돌리면서\n      const nowImageUrl = URL.createObjectURL(nowSelectImageList[i]);\n      //미리보기 가능하게 변수화\n      nowImageURLList.push(nowImageUrl);\n      //복사한 myImage에 추가\n    }\n    const handleDeleteImage = (id) => {\n      setShowImages(showImages.filter((_, index) => index !== id));\n    };\n    setMyImage(nowImageURLList);\n    //MyImage원본에 덮어씌우기\n  };\n  for (let i = 0; i < myImage.length; i++) {}\n  return (\n    <div\n      style={{\n        color: \"white\",\n      }}\n    >\n      <label\n        htmlFor=\"input-file\"\n        className=\"OOTDWrite-input-file\"\n        onChange={addImage}\n      >\n        Add your photo{\" \"}\n        <input\n          type=\"file\"\n          multiple=\"multiple\"\n          id=\"input-file\"\n          style={{ display: \"none\" }}\n          accept=\".jpg, .jpeg, .png\"\n        />\n      </label>\n      <div className=\"preview\" style={{}}>\n        {myImage.map((image, id) => (\n          <>\n            <img src={image} alt={`${image}-${id}`} style={{ height: 300 }} />\n            <input\n              type=\"button\"\n              value=\"Try\"\n              style={{ width: 20 }}\n              onClick={() => {\n                handleDeleteImage(id);\n              }}\n            />\n          </>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Desktop_Booth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}