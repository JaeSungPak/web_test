{"ast":null,"code":"var _jsxFileName = \"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/components/tmIntro.js\";\nimport { React, useState, useEffect } from \"react\";\nimport banner_image from \"../../../assets/images/Banner.png\";\nimport Desktop_Booth from \"modules/toMesh/components/tmUpload\";\nfunction Banner(props) {\n  return /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: banner_image,\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\"\n    },\n    alt: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  })));\n}\nfunction Desktop_Title() {\n  const [page, setPage] = useState(\"TITLE\");\n  const title_page = /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      color: \"white\",\n      fontSize: 36,\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Take your photo into 3D Mesh\", /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      color: \"gray\",\n      fontSize: 14\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"We build the AI model to generate a high-quality 3D model from a single picture within 3 minutes. You can try our model in this demo webpage with minimum effort. Don't hesitate it.\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"Start\",\n    style: {\n      inlineSize: \"100%\",\n      fontSize: 36,\n      marginTop: 30\n    },\n    onClick: () => {\n      setPage(\"UPLOAD\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Banner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })));\n  let content = null;\n  const booth_page = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 22\n    }\n  });\n  if (page === \"TITLE\") {\n    content = title_page;\n  } else if (page === \"UPLOAD\") {\n    content = /*#__PURE__*/React.createElement(Desktop_Booth, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 10\n    }\n  }, content, \" \");\n}\nexport default Desktop_Title;","map":{"version":3,"names":["React","useState","useEffect","banner_image","Desktop_Booth","Banner","props","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","style","display","alignItems","justifyContent","width","alt","Desktop_Title","page","setPage","title_page","color","fontSize","margin","type","value","inlineSize","marginTop","onClick","content","booth_page","className"],"sources":["/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/components/tmIntro.js"],"sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport banner_image from \"../../../assets/images/Banner.png\";\nimport Desktop_Booth from \"modules/toMesh/components/tmUpload\";\n\nfunction Banner(props) {\n  return (\n    <header>\n      <h1>\n        <img\n          src={banner_image}\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            width: \"100%\",\n          }}\n          alt=\"Title\"\n        />\n      </h1>\n    </header>\n  );\n}\n\nfunction Desktop_Title() {\n  const [page, setPage] = useState(\"TITLE\");\n\n  const title_page = (\n    <div style={{ display: \"flex\" }}>\n      <div\n        style={{\n          width: \"100%\",\n          color: \"white\",\n          fontSize: 36,\n          margin: 20,\n        }}\n      >\n        Take your photo into 3D Mesh\n        <div\n          style={{\n            width: \"100%\",\n            color: \"gray\",\n            fontSize: 14,\n          }}\n        >\n          We build the AI model to generate a high-quality 3D model from a\n          single picture within 3 minutes. You can try our model in this demo\n          webpage with minimum effort. Don't hesitate it.\n        </div>\n        <input\n          type=\"button\"\n          value=\"Start\"\n          style={{\n            inlineSize: \"100%\",\n            fontSize: 36,\n            marginTop: 30,\n          }}\n          onClick={() => {\n            setPage(\"UPLOAD\");\n          }}\n        />\n        <Banner />\n      </div>\n    </div>\n  );\n\n  let content = null;\n  const booth_page = <div />;\n\n  if (page === \"TITLE\") {\n    content = title_page;\n  } else if (page === \"UPLOAD\") {\n    content = <Desktop_Booth />;\n  }\n\n  return <div className=\"App\">{content} </div>;\n}\n\nexport default Desktop_Title;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}