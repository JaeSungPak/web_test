{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getMessaging, getToken, onMessage } from \"firebase/messaging\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBn9tebNSE_zHtdF9XeHpp-NF8fh1Yp-Ys\",\n  authDomain: \"notice-test-faa28.firebaseapp.com\",\n  projectId: \"notice-test-faa28\",\n  storageBucket: \"notice-test-faa28.appspot.com\",\n  messagingSenderId: \"926284303091\",\n  appId: \"1:926284303091:web:98b5e02104f116b2b94586\",\n  measurementId: \"G-DVET9T6B55\"\n};\nconst app = initializeApp(firebaseConfig);\nconst messaging = getMessaging(app);\nfunction initServiceWorker() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.register(\"firebase-messaging-sw.js\").then(function (registration) {\n      console.log(\"Registration successful, scope is:\", registration.scope);\n      return registration;\n    }).catch(function (err) {\n      console.log(\"Service worker registration failed, error:\", err);\n    });\n  }\n}\nexport const requestPermission = () => {\n  console.log(\"권한 요청 중...\");\n  Notification.requestPermission().then(permission => {\n    if (permission === \"granted\") {\n      console.log(\"알림 권한이 허용됨\");\n      return getToken(messaging, {\n        vapidKey: \"BC5frPVyX5VqaUU-pwEbevfYjqBMymWollYD1ImZ4BTPbqsFnyN64dLCqwLAWtYjQ7b2DVS5yGLbVelgEIfdDyU\"\n      }).then(currentToken => {\n        if (currentToken) {\n          console.log(\"Client Token: \", currentToken);\n          // Send the token to your server and update the UI if necessary\n          // ...\n        } else {\n          // Show permission request UI\n          console.log(\"No registration token available. Request permission to generate one.\");\n          // ...\n        }\n      }).catch(e => console.log(\"error==> \", e));\n    } else {\n      console.log(\"알림 권한 허용 안됨\");\n    }\n  });\n};\nrequestPermission();\nexport const onMessageListener = () => new Promise(resolve => {\n  onMessage(messaging, payload => {\n    resolve(payload);\n  });\n});","map":{"version":3,"names":["initializeApp","getMessaging","getToken","onMessage","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","messaging","initServiceWorker","navigator","serviceWorker","register","then","registration","console","log","scope","catch","err","requestPermission","Notification","permission","vapidKey","currentToken","e","onMessageListener","Promise","resolve","payload"],"sources":["/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/components/firebaseConfig.ts"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getMessaging, getToken, onMessage } from \"firebase/messaging\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBn9tebNSE_zHtdF9XeHpp-NF8fh1Yp-Ys\",\n  authDomain: \"notice-test-faa28.firebaseapp.com\",\n  projectId: \"notice-test-faa28\",\n  storageBucket: \"notice-test-faa28.appspot.com\",\n  messagingSenderId: \"926284303091\",\n  appId: \"1:926284303091:web:98b5e02104f116b2b94586\",\n  measurementId: \"G-DVET9T6B55\",\n};\n\nconst app = initializeApp(firebaseConfig);\n\nconst messaging = getMessaging(app);\n\nfunction initServiceWorker() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker\n      .register(\"firebase-messaging-sw.js\")\n      .then(function (registration) {\n        console.log(\"Registration successful, scope is:\", registration.scope);\n\n        return registration;\n      })\n      .catch(function (err) {\n        console.log(\"Service worker registration failed, error:\", err);\n      });\n  }\n}\n\nexport const requestPermission = () => {\n  console.log(\"권한 요청 중...\");\n  Notification.requestPermission().then((permission) => {\n    if (permission === \"granted\") {\n      console.log(\"알림 권한이 허용됨\");\n      return getToken(messaging, {\n        vapidKey:\n          \"BC5frPVyX5VqaUU-pwEbevfYjqBMymWollYD1ImZ4BTPbqsFnyN64dLCqwLAWtYjQ7b2DVS5yGLbVelgEIfdDyU\",\n      })\n        .then((currentToken) => {\n          if (currentToken) {\n            console.log(\"Client Token: \", currentToken);\n            // Send the token to your server and update the UI if necessary\n            // ...\n          } else {\n            // Show permission request UI\n            console.log(\n              \"No registration token available. Request permission to generate one.\"\n            );\n            // ...\n          }\n        })\n        .catch((e) => console.log(\"error==> \", e));\n    } else {\n      console.log(\"알림 권한 허용 안됨\");\n    }\n  });\n};\n\nrequestPermission();\n\nexport const onMessageListener = () =>\n  new Promise((resolve) => {\n    onMessage(messaging, (payload) => {\n      resolve(payload);\n    });\n  });\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB;AAEtE,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,mCAAmC;EAC/CC,SAAS,EAAE,mBAAmB;EAC9BC,aAAa,EAAE,+BAA+B;EAC9CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,GAAG,GAAGZ,aAAa,CAACI,cAAc,CAAC;AAEzC,MAAMS,SAAS,GAAGZ,YAAY,CAACW,GAAG,CAAC;AAEnC,SAASE,iBAAiBA,CAAA,EAAG;EAC3B,IAAI,eAAe,IAAIC,SAAS,EAAE;IAChCA,SAAS,CAACC,aAAa,CACpBC,QAAQ,CAAC,0BAA0B,CAAC,CACpCC,IAAI,CAAC,UAAUC,YAAY,EAAE;MAC5BC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEF,YAAY,CAACG,KAAK,CAAC;MAErE,OAAOH,YAAY;IACrB,CAAC,CAAC,CACDI,KAAK,CAAC,UAAUC,GAAG,EAAE;MACpBJ,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEG,GAAG,CAAC;IAChE,CAAC,CAAC;EACN;AACF;AAEA,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EACrCL,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EACzBK,YAAY,CAACD,iBAAiB,CAAC,CAAC,CAACP,IAAI,CAAES,UAAU,IAAK;IACpD,IAAIA,UAAU,KAAK,SAAS,EAAE;MAC5BP,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzB,OAAOnB,QAAQ,CAACW,SAAS,EAAE;QACzBe,QAAQ,EACN;MACJ,CAAC,CAAC,CACCV,IAAI,CAAEW,YAAY,IAAK;QACtB,IAAIA,YAAY,EAAE;UAChBT,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEQ,YAAY,CAAC;UAC3C;UACA;QACF,CAAC,MAAM;UACL;UACAT,OAAO,CAACC,GAAG,CACT,sEACF,CAAC;UACD;QACF;MACF,CAAC,CAAC,CACDE,KAAK,CAAEO,CAAC,IAAKV,OAAO,CAACC,GAAG,CAAC,WAAW,EAAES,CAAC,CAAC,CAAC;IAC9C,CAAC,MAAM;MACLV,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC5B;EACF,CAAC,CAAC;AACJ,CAAC;AAEDI,iBAAiB,CAAC,CAAC;AAEnB,OAAO,MAAMM,iBAAiB,GAAGA,CAAA,KAC/B,IAAIC,OAAO,CAAEC,OAAO,IAAK;EACvB9B,SAAS,CAACU,SAAS,EAAGqB,OAAO,IAAK;IAChCD,OAAO,CAACC,OAAO,CAAC;EAClB,CAAC,CAAC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}