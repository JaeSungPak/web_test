{"ast":null,"code":"var _jsxFileName = \"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/components/tmIntro.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from \"react\";\nimport banner_image from \"../../../assets/images/Banner.png\";\nimport Desktop_Booth from \"modules/toMesh/components/tmUpload\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Banner(props) {\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: banner_image,\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          width: \"100%\"\n        },\n        alt: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = Banner;\nfunction Desktop_Title() {\n  _s();\n  const [page, setPage] = useState(\"TITLE\");\n  const title_page = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        color: \"white\",\n        fontSize: 36,\n        margin: 20\n      },\n      children: \"Take your photo into 3D Mesh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        color: \"gray\",\n        fontSize: 14\n      },\n      children: \"We build the AI model to generate a high-quality 3D model from a single picture within 3 minutes. You can try our model in this demo webpage with minimum effort. Don't hesitate it.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Start\",\n      style: {\n        inlineSize: \"100%\",\n        fontSize: 36,\n        marginTop: 30\n      },\n      onClick: () => {\n        setPage(\"UPLOAD\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  let content = null;\n  const booth_page = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 22\n  }, this);\n  if (page === \"TITLE\") {\n    content = title_page;\n  } else if (page === \"UPLOAD\") {\n    content = /*#__PURE__*/_jsxDEV(Desktop_Booth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [content, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 10\n  }, this);\n}\n_s(Desktop_Title, \"SYfR7eO5dj2HqSOB2RMm4LnYlxQ=\");\n_c2 = Desktop_Title;\nexport default Desktop_Title;\nvar _c, _c2;\n$RefreshReg$(_c, \"Banner\");\n$RefreshReg$(_c2, \"Desktop_Title\");","map":{"version":3,"names":["React","useState","useEffect","banner_image","Desktop_Booth","jsxDEV","_jsxDEV","Fragment","_Fragment","Banner","props","children","src","style","display","alignItems","justifyContent","width","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","Desktop_Title","_s","page","setPage","title_page","color","fontSize","margin","type","value","inlineSize","marginTop","onClick","content","booth_page","className","_c2","$RefreshReg$"],"sources":["/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/components/tmIntro.js"],"sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport banner_image from \"../../../assets/images/Banner.png\";\nimport Desktop_Booth from \"modules/toMesh/components/tmUpload\";\n\nfunction Banner(props) {\n  return (\n    <header>\n      <h1>\n        <img\n          src={banner_image}\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            width: \"100%\",\n          }}\n          alt=\"Title\"\n        />\n      </h1>\n    </header>\n  );\n}\n\nfunction Desktop_Title() {\n  const [page, setPage] = useState(\"TITLE\");\n\n  const title_page = (\n    <>\n      <div\n        style={{\n          width: \"100%\",\n          color: \"white\",\n          fontSize: 36,\n          margin: 20,\n        }}\n      >\n        Take your photo into 3D Mesh\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          color: \"gray\",\n          fontSize: 14,\n        }}\n      >\n        We build the AI model to generate a high-quality 3D model from a single\n        picture within 3 minutes. You can try our model in this demo webpage\n        with minimum effort. Don't hesitate it.\n      </div>\n      <input\n        type=\"button\"\n        value=\"Start\"\n        style={{\n          inlineSize: \"100%\",\n          fontSize: 36,\n          marginTop: 30,\n        }}\n        onClick={() => {\n          setPage(\"UPLOAD\");\n        }}\n      />\n      <Banner />\n    </>\n  );\n\n  let content = null;\n  const booth_page = <div />;\n\n  if (page === \"TITLE\") {\n    content = title_page;\n  } else if (page === \"UPLOAD\") {\n    content = <Desktop_Booth />;\n  }\n\n  return <div className=\"App\">{content} </div>;\n}\n\nexport default Desktop_Title;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}