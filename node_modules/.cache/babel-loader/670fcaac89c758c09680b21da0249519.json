{"ast":null,"code":"import React from \"react\";\nimport { useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport useCharacterStore from \"../stores/characterStore\";\nexport const socket = io(\"http://localhost:3001\");\nexport const SocketManager = () => {\n  const setCharacters = useCharacterStore(state => state.setCharacters);\n  useEffect(() => {\n    function onConnect() {\n      console.log(\"connected\");\n    }\n    function onDisconnect() {\n      console.log(\"disconnected\");\n    }\n    function onCharacters(characters) {\n      setCharacters(characters);\n      console.log(characters);\n    }\n    socket.on(\"connect\", onConnect);\n    socket.on(\"disconnect\", onDisconnect);\n    socket.on(\"characters\", onCharacters);\n    return () => {\n      socket.off(\"connect\", onConnect);\n      socket.off(\"disconnect\", onDisconnect);\n      socket.off(\"characters\", onCharacters);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n};","map":{"version":3,"names":["React","useEffect","io","useCharacterStore","socket","SocketManager","setCharacters","state","onConnect","console","log","onDisconnect","onCharacters","characters","on","off","createElement","Fragment"],"sources":["/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/square/components/SocketManager.tsx"],"sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport useCharacterStore from \"../stores/characterStore\";\nimport { ICharacter } from \"../data/CharacterData\";\n\nexport const socket = io(\"http://localhost:3001\");\n\nexport const SocketManager = () => {\n  const setCharacters = useCharacterStore((state) => state.setCharacters);\n\n  useEffect(() => {\n    function onConnect() {\n      console.log(\"connected\");\n    }\n    function onDisconnect() {\n      console.log(\"disconnected\");\n    }\n    function onCharacters(characters: ICharacter[]) {\n      setCharacters(characters);\n      console.log(characters);\n    }\n\n    socket.on(\"connect\", onConnect);\n    socket.on(\"disconnect\", onDisconnect);\n    socket.on(\"characters\", onCharacters);\n\n    return () => {\n      socket.off(\"connect\", onConnect);\n      socket.off(\"disconnect\", onDisconnect);\n      socket.off(\"characters\", onCharacters);\n    };\n  }, []);\n\n  return <></>;\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAOC,iBAAiB,MAAM,0BAA0B;AAGxD,OAAO,MAAMC,MAAM,GAAGF,EAAE,CAAC,uBAAuB,CAAC;AAEjD,OAAO,MAAMG,aAAa,GAAGA,CAAA,KAAM;EACjC,MAAMC,aAAa,GAAGH,iBAAiB,CAAEI,KAAK,IAAKA,KAAK,CAACD,aAAa,CAAC;EAEvEL,SAAS,CAAC,MAAM;IACd,SAASO,SAASA,CAAA,EAAG;MACnBC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1B;IACA,SAASC,YAAYA,CAAA,EAAG;MACtBF,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC7B;IACA,SAASE,YAAYA,CAACC,UAAwB,EAAE;MAC9CP,aAAa,CAACO,UAAU,CAAC;MACzBJ,OAAO,CAACC,GAAG,CAACG,UAAU,CAAC;IACzB;IAEAT,MAAM,CAACU,EAAE,CAAC,SAAS,EAAEN,SAAS,CAAC;IAC/BJ,MAAM,CAACU,EAAE,CAAC,YAAY,EAAEH,YAAY,CAAC;IACrCP,MAAM,CAACU,EAAE,CAAC,YAAY,EAAEF,YAAY,CAAC;IAErC,OAAO,MAAM;MACXR,MAAM,CAACW,GAAG,CAAC,SAAS,EAAEP,SAAS,CAAC;MAChCJ,MAAM,CAACW,GAAG,CAAC,YAAY,EAAEJ,YAAY,CAAC;MACtCP,MAAM,CAACW,GAAG,CAAC,YAAY,EAAEH,YAAY,CAAC;IACxC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOZ,KAAA,CAAAgB,aAAA,CAAAhB,KAAA,CAAAiB,QAAA,MAAI,CAAC;AACd,CAAC"},"metadata":{},"sourceType":"module"}