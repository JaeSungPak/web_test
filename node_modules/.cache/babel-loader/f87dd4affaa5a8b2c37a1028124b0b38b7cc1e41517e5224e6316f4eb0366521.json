{"ast":null,"code":"var _jsxFileName = \"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/ToMesh.tsx\",\n  _s = $RefreshSig$();\nimport \"./styles/ToMesh.css\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { BrowserView, MobileOnlyView } from \"react-device-detect\";\nimport Desktop_Title from \"modules/toMesh/components/TMIntro\";\nimport Header from \"modules/toMesh/components/TMTitle\";\nimport { getMessageToken } from \"modules/toMesh/components/firebase-messaging-sw\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction requestPermission() {\n  console.log(\"권한 요청 중...\");\n  Notification.requestPermission().then(permission => {\n    if (permission === \"granted\") {\n      console.log(\"알림 권한이 허용됨\");\n    } else {\n      console.log(\"알림 권한 허용 안됨\");\n    }\n  });\n}\nfunction initServiceWorker() {\n  if (\"serviceWorker\" in navigator) {\n    const options = {\n      body: \"newOffer.subheading\",\n      icon: \"./logo192.png\",\n      image: \"./static/media/placeholder-offer.1bcbf040.png\",\n      vibrate: [100, 50, 200],\n      badge: \"./favicon.ico\",\n      tag: \"new-offers\",\n      renotify: true,\n      actions: [{\n        action: \"confirm\",\n        title: \"Check offer\",\n        icon: \"\"\n      }]\n    };\n    navigator.serviceWorker.register(\"firebase-messaging-sw.js\").then(function (registration) {\n      console.log(\"Registration successful, scope is:\", registration.scope);\n    }).catch(function (err) {\n      console.log(\"Service worker registration failed, error:\", err);\n    });\n  }\n}\nconst ToMesh = () => {\n  _s();\n  requestPermission();\n  if (\"serviceWorker\" in navigator) {\n    initServiceWorker();\n  }\n  useEffect(() => {\n    getMessageToken();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BrowserView, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(Desktop_Title, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MobileOnlyView, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"// \", /*#__PURE__*/_jsxDEV(Desktop_Title, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ToMesh, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ToMesh;\nexport default ToMesh;\nvar _c;\n$RefreshReg$(_c, \"ToMesh\");","map":{"version":3,"names":["React","useEffect","BrowserView","MobileOnlyView","Desktop_Title","Header","getMessageToken","jsxDEV","_jsxDEV","Fragment","_Fragment","requestPermission","console","log","Notification","then","permission","initServiceWorker","navigator","options","body","icon","image","vibrate","badge","tag","renotify","actions","action","title","serviceWorker","register","registration","scope","catch","err","ToMesh","_s","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/ToMesh.tsx"],"sourcesContent":["import \"./styles/ToMesh.css\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { BrowserView, MobileOnlyView } from \"react-device-detect\";\nimport Desktop_Title from \"modules/toMesh/components/TMIntro\";\nimport Header from \"modules/toMesh/components/TMTitle\";\nimport { getMessageToken } from \"modules/toMesh/components/firebase-messaging-sw\";\n\nfunction requestPermission() {\n  console.log(\"권한 요청 중...\");\n  Notification.requestPermission().then((permission) => {\n    if (permission === \"granted\") {\n      console.log(\"알림 권한이 허용됨\");\n    } else {\n      console.log(\"알림 권한 허용 안됨\");\n    }\n  });\n}\n\nfunction initServiceWorker() {\n  if (\"serviceWorker\" in navigator) {\n    const options = {\n      body: \"newOffer.subheading\",\n      icon: \"./logo192.png\",\n      image: \"./static/media/placeholder-offer.1bcbf040.png\",\n      vibrate: [100, 50, 200],\n      badge: \"./favicon.ico\",\n      tag: \"new-offers\",\n      renotify: true,\n      actions: [{ action: \"confirm\", title: \"Check offer\", icon: \"\" }],\n    };\n\n    navigator.serviceWorker\n      .register(\"firebase-messaging-sw.js\")\n      .then(function (registration) {\n        console.log(\"Registration successful, scope is:\", registration.scope);\n      })\n      .catch(function (err) {\n        console.log(\"Service worker registration failed, error:\", err);\n      });\n  }\n}\n\nconst ToMesh = () => {\n  requestPermission();\n  if (\"serviceWorker\" in navigator) {\n    initServiceWorker();\n  }\n\n  useEffect(() => {\n    getMessageToken();\n  }, []);\n\n  return (\n    <>\n      <Header></Header>\n      <BrowserView>\n        <h1>\n          <Desktop_Title />\n        </h1>\n      </BrowserView>\n      <MobileOnlyView>\n        <h1>\n          // <Desktop_Title />\n        </h1>\n      </MobileOnlyView>\n    </>\n  );\n};\n\nexport default ToMesh;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}