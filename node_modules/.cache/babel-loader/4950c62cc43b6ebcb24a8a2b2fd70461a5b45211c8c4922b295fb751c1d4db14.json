{"ast":null,"code":"var _jsxFileName = \"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/components/TMIntro.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Title, Description } from \"modules/toMesh/components/TMComponents\";\nimport banner_image from \"../../../assets/images/Banner.png\";\nimport Desktop_Booth from \"modules/toMesh/components/TMUpload\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Banner() {\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: banner_image,\n        style: {\n          margin: \"10%\",\n          width: \"80%\"\n        },\n        alt: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = Banner;\nfunction Desktop_Title() {\n  _s();\n  const [page, setPage] = useState(\"TITLE\");\n  const title_page = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      val: \"Take your photo into 3D Mesh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Description, {\n      val: \" We build the AI model to generate a high-quality 3D model from a single picture within 3 minutes. You can try our model in this demo webpage with minimum effort. Don't hesitate it.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Start\",\n      style: {\n        inlineSize: \"90%\",\n        fontSize: 36,\n        marginTop: 30,\n        margin: \"5%\",\n        background: \"#98FA4B\",\n        borderRadius: 20,\n        height: 70,\n        width: \"90%\"\n      },\n      onClick: () => {\n        setPage(\"UPLOAD\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  let content = null;\n  const booth_page = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 22\n  }, this);\n  if (page === \"TITLE\") {\n    content = title_page;\n  } else if (page === \"UPLOAD\") {\n    content = /*#__PURE__*/_jsxDEV(Desktop_Booth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [content, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n}\n_s(Desktop_Title, \"SYfR7eO5dj2HqSOB2RMm4LnYlxQ=\");\n_c2 = Desktop_Title;\nexport default Desktop_Title;\nvar _c, _c2;\n$RefreshReg$(_c, \"Banner\");\n$RefreshReg$(_c2, \"Desktop_Title\");","map":{"version":3,"names":["useState","Title","Description","banner_image","Desktop_Booth","jsxDEV","_jsxDEV","Fragment","_Fragment","Banner","children","src","style","margin","width","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","Desktop_Title","_s","page","setPage","title_page","val","type","value","inlineSize","fontSize","marginTop","background","borderRadius","height","onClick","content","booth_page","className","_c2","$RefreshReg$"],"sources":["/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/components/TMIntro.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Title, Description } from \"modules/toMesh/components/TMComponents\";\nimport banner_image from \"../../../assets/images/Banner.png\";\nimport Desktop_Booth from \"modules/toMesh/components/TMUpload\";\n\nfunction Banner() {\n  return (\n    <header>\n      <h1>\n        <img\n          src={banner_image}\n          style={{\n            margin: \"10%\",\n            width: \"80%\",\n          }}\n          alt=\"Title\"\n        />\n      </h1>\n    </header>\n  );\n}\n\nfunction Desktop_Title() {\n  const [page, setPage] = useState(\"TITLE\");\n\n  const title_page = (\n    <>\n\n      <Title val =\"Take your photo into 3D Mesh\" />\n      <Description\n        val=\"\n      We build the AI model to generate a high-quality 3D model from a single\n      picture within 3 minutes. You can try our model in this demo webpage with\n      minimum effort. Don't hesitate it.\"\n      />\n      <input\n        type=\"button\"\n        value=\"Start\"\n        style={{\n          inlineSize: \"90%\",\n          fontSize: 36,\n          marginTop: 30,\n          margin: \"5%\",\n          background: \"#98FA4B\",\n          borderRadius: 20,\n          height: 70,\n          width: \"90%\",\n        }}\n        onClick={() => {\n          setPage(\"UPLOAD\");\n        }}\n      />\n      <Banner />\n    </>\n  );\n\n  let content = null;\n  const booth_page = <div />;\n\n  if (page === \"TITLE\") {\n    content = title_page;\n  } else if (page === \"UPLOAD\") {\n    content = <Desktop_Booth />;\n  }\n\n  return <div className=\"App\">{content} </div>;\n}\n\nexport default Desktop_Title;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAmB,OAAO;AAC3C,SAASC,KAAK,EAAEC,WAAW,QAAQ,wCAAwC;AAC3E,OAAOC,YAAY,MAAM,mCAAmC;AAC5D,OAAOC,aAAa,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/D,SAASC,MAAMA,CAAA,EAAG;EAChB,oBACEH,OAAA;IAAAI,QAAA,eACEJ,OAAA;MAAAI,QAAA,eACEJ,OAAA;QACEK,GAAG,EAAER,YAAa;QAClBS,KAAK,EAAE;UACLC,MAAM,EAAE,KAAK;UACbC,KAAK,EAAE;QACT,CAAE;QACFC,GAAG,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEb;AAACC,EAAA,GAfQX,MAAM;AAiBf,SAASY,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,OAAO,CAAC;EAEzC,MAAMyB,UAAU,gBACdnB,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBAEEJ,OAAA,CAACL,KAAK;MAACyB,GAAG,EAAE;IAA8B;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7Cb,OAAA,CAACJ,WAAW;MACVwB,GAAG,EAAC;IAG6B;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFb,OAAA;MACEqB,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAC,OAAO;MACbhB,KAAK,EAAE;QACLiB,UAAU,EAAE,KAAK;QACjBC,QAAQ,EAAE,EAAE;QACZC,SAAS,EAAE,EAAE;QACblB,MAAM,EAAE,IAAI;QACZmB,UAAU,EAAE,SAAS;QACrBC,YAAY,EAAE,EAAE;QAChBC,MAAM,EAAE,EAAE;QACVpB,KAAK,EAAE;MACT,CAAE;MACFqB,OAAO,EAAEA,CAAA,KAAM;QACbX,OAAO,CAAC,QAAQ,CAAC;MACnB;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFb,OAAA,CAACG,MAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACV,CACH;EAED,IAAIiB,OAAO,GAAG,IAAI;EAClB,MAAMC,UAAU,gBAAG/B,OAAA;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE1B,IAAII,IAAI,KAAK,OAAO,EAAE;IACpBa,OAAO,GAAGX,UAAU;EACtB,CAAC,MAAM,IAAIF,IAAI,KAAK,QAAQ,EAAE;IAC5Ba,OAAO,gBAAG9B,OAAA,CAACF,aAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7B;EAEA,oBAAOb,OAAA;IAAKgC,SAAS,EAAC,KAAK;IAAA5B,QAAA,GAAE0B,OAAO,EAAC,GAAC;EAAA;IAAApB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC9C;AAACG,EAAA,CA5CQD,aAAa;AAAAkB,GAAA,GAAblB,aAAa;AA8CtB,eAAeA,aAAa;AAAC,IAAAD,EAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}