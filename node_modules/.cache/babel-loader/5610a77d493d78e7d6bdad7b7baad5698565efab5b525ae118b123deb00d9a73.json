{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.req = exports.json = exports.toBuffer = void 0;\nconst http = __importStar(require(\"http\"));\nconst https = __importStar(require(\"https\"));\nasync function toBuffer(stream) {\n  let length = 0;\n  const chunks = [];\n  for await (const chunk of stream) {\n    length += chunk.length;\n    chunks.push(chunk);\n  }\n  return Buffer.concat(chunks, length);\n}\nexports.toBuffer = toBuffer;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function json(stream) {\n  const buf = await toBuffer(stream);\n  const str = buf.toString('utf8');\n  try {\n    return JSON.parse(str);\n  } catch (_err) {\n    const err = _err;\n    err.message += ` (input: ${str})`;\n    throw err;\n  }\n}\nexports.json = json;\nfunction req(url, opts = {}) {\n  const href = typeof url === 'string' ? url : url.href;\n  const req = (href.startsWith('https:') ? https : http).request(url, opts);\n  const promise = new Promise((resolve, reject) => {\n    req.once('response', resolve).once('error', reject).end();\n  });\n  req.then = promise.then.bind(promise);\n  return req;\n}\nexports.req = req;\n//# sourceMappingURL=helpers.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}