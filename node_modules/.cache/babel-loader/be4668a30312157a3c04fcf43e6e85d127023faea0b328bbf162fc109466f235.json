{"ast":null,"code":"var _jsxFileName = \"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/photoBooth/components/desktopBooth.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./desktopBooth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Desktop_Booth() {\n  _s();\n  var _previews;\n  const [imgFile, setDetailImgs] = useState([]);\n  const handleImageChange = e => {\n    const newImages = [...images];\n    const newPreviews = [...previews];\n    newImages.splice(index, 1);\n    newPreviews.splice(index, 1);\n    setImages(newImages);\n    setPreviews(newPreviews);\n    for (let i = 0; i < e.target.files.length; i++) {\n      const file = e.target.files[i];\n      // 이미지 파일 3개로 제한\n      if (newImages.length < 3) {\n        // 이벤트객체의 파일을 newImages에 담기\n        newImages.push(file);\n        // 파일리더 객체 생성\n        const reader = new FileReader();\n        // 파일 읽어온 후 실행되는 콜백함수\n        reader.onload = e => {\n          // 읽어온 값을 갱신하기\n          newPreviews.push(e.target.result);\n          setPreviews(newPreviews);\n        };\n        // 파일 객체를 읽어 base64 형태의 문자열로 변환\n        reader.readAsDataURL(file);\n      }\n    }\n    setImages(newImages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.imgContainer,\n    children: [\"// \\uBBF8\\uB9AC\\uBCF4\\uAE30 \\uC774\\uBBF8\\uC9C0 \\uC21C\\uD68C\\uD558\\uC5EC \\uD654\\uBA74\\uC5D0 \\uB744\\uC6B0\\uAE30\", (_previews = previews) === null || _previews === void 0 ? void 0 : _previews.map((preview, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.imgBox,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: preview,\n        width: 200,\n        height: 200,\n        alt: `${preview}-${index}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IoMdClose, {\n        className: styles.deleteImg,\n        onClick: () => handleDeletePreview(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Desktop_Booth, \"l40BRq2oWqxav0eg/eQ1uumpaiI=\");\n_c = Desktop_Booth;\nexport default Desktop_Booth;\nvar _c;\n$RefreshReg$(_c, \"Desktop_Booth\");","map":{"version":3,"names":["useState","useEffect","useRef","jsxDEV","_jsxDEV","Desktop_Booth","_s","_previews","imgFile","setDetailImgs","handleImageChange","e","newImages","images","newPreviews","previews","splice","index","setImages","setPreviews","i","target","files","length","file","push","reader","FileReader","onload","result","readAsDataURL","className","styles","imgContainer","children","map","preview","imgBox","Image","src","width","height","alt","fileName","_jsxFileName","lineNumber","columnNumber","IoMdClose","deleteImg","onClick","handleDeletePreview","_c","$RefreshReg$"],"sources":["/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/photoBooth/components/desktopBooth.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport \"./desktopBooth.css\";\n\nfunction Desktop_Booth() {\n  const [imgFile, setDetailImgs] = useState([]);\n\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newImages = [...images];\n    const newPreviews = [...previews];\n    newImages.splice(index, 1);\n    newPreviews.splice(index, 1);\n    setImages(newImages);\n    setPreviews(newPreviews);\n\n    for (let i = 0; i < e.target.files.length; i++) {\n      const file = e.target.files[i];\n      // 이미지 파일 3개로 제한\n      if (newImages.length < 3) {\n        // 이벤트객체의 파일을 newImages에 담기\n        newImages.push(file);\n        // 파일리더 객체 생성\n        const reader = new FileReader();\n        // 파일 읽어온 후 실행되는 콜백함수\n        reader.onload = (e) => {\n          // 읽어온 값을 갱신하기\n          newPreviews.push(e.target.result);\n          setPreviews(newPreviews);\n        };\n        // 파일 객체를 읽어 base64 형태의 문자열로 변환\n        reader.readAsDataURL(file);\n      }\n    }\n    setImages(newImages);\n  };\n\n  return (\n    <div className={styles.imgContainer}>\n      // 미리보기 이미지 순회하여 화면에 띄우기\n      {previews?.map((preview, index) => (\n        <div className={styles.imgBox} key={index}>\n          <Image\n            src={preview}\n            width={200}\n            height={200}\n            alt={`${preview}-${index}`}\n          />\n          <IoMdClose\n            className={styles.deleteImg}\n            onClick={() => handleDeletePreview(index)}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Desktop_Booth;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,SAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE7C,MAAMU,iBAAiB,GAAIC,CAAsC,IAAK;IACpE,MAAMC,SAAS,GAAG,CAAC,GAAGC,MAAM,CAAC;IAC7B,MAAMC,WAAW,GAAG,CAAC,GAAGC,QAAQ,CAAC;IACjCH,SAAS,CAACI,MAAM,CAACC,KAAK,EAAE,CAAC,CAAC;IAC1BH,WAAW,CAACE,MAAM,CAACC,KAAK,EAAE,CAAC,CAAC;IAC5BC,SAAS,CAACN,SAAS,CAAC;IACpBO,WAAW,CAACL,WAAW,CAAC;IAExB,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,CAAC,CAACU,MAAM,CAACC,KAAK,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;MAC9C,MAAMI,IAAI,GAAGb,CAAC,CAACU,MAAM,CAACC,KAAK,CAACF,CAAC,CAAC;MAC9B;MACA,IAAIR,SAAS,CAACW,MAAM,GAAG,CAAC,EAAE;QACxB;QACAX,SAAS,CAACa,IAAI,CAACD,IAAI,CAAC;QACpB;QACA,MAAME,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;QAC/B;QACAD,MAAM,CAACE,MAAM,GAAIjB,CAAC,IAAK;UACrB;UACAG,WAAW,CAACW,IAAI,CAACd,CAAC,CAACU,MAAM,CAACQ,MAAM,CAAC;UACjCV,WAAW,CAACL,WAAW,CAAC;QAC1B,CAAC;QACD;QACAY,MAAM,CAACI,aAAa,CAACN,IAAI,CAAC;MAC5B;IACF;IACAN,SAAS,CAACN,SAAS,CAAC;EACtB,CAAC;EAED,oBACER,OAAA;IAAK2B,SAAS,EAAEC,MAAM,CAACC,YAAa;IAAAC,QAAA,GAAC,+GAEnC,GAAA3B,SAAA,GAACQ,QAAQ,cAAAR,SAAA,uBAARA,SAAA,CAAU4B,GAAG,CAAC,CAACC,OAAO,EAAEnB,KAAK,kBAC5Bb,OAAA;MAAK2B,SAAS,EAAEC,MAAM,CAACK,MAAO;MAAAH,QAAA,gBAC5B9B,OAAA,CAACkC,KAAK;QACJC,GAAG,EAAEH,OAAQ;QACbI,KAAK,EAAE,GAAI;QACXC,MAAM,EAAE,GAAI;QACZC,GAAG,EAAG,GAAEN,OAAQ,IAAGnB,KAAM;MAAE;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACF1C,OAAA,CAAC2C,SAAS;QACRhB,SAAS,EAAEC,MAAM,CAACgB,SAAU;QAC5BC,OAAO,EAAEA,CAAA,KAAMC,mBAAmB,CAACjC,KAAK;MAAE;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA,GAVgC7B,KAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWpC,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACxC,EAAA,CAnDQD,aAAa;AAAA8C,EAAA,GAAb9C,aAAa;AAqDtB,eAAeA,aAAa;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}