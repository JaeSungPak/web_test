[{"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/index.tsx":"1","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/reportWebVitals.ts":"2","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/App.tsx":"3","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/common/router/routes.tsx":"4","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/common/components/SuspenseLazy.tsx":"5","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/common/components/NotFound.tsx":"6","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/common/components/MobileViewInfo.tsx":"7","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/common/components/BrowserViewInfo.tsx":"8","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/photoBooth/PhotoBooth.tsx":"9","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toAvatar/ToAvatar.tsx":"10","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/square/Square.tsx":"11","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/apis/square/AxiosRequestsSquare.ts":"12","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/apis/square/AxiosInstanceSquare.ts":"13","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/square/components/SocketManager.tsx":"14","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/square/stores/characterStore.ts":"15","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/square/components/Character.tsx":"16","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/components/TMTitle.tsx":"17","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/components/TMIntro.tsx":"18","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/components/TMUpload.tsx":"19","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/components/TMComponents.tsx":"20","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/ToMesh.tsx":"21","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/square/components/SquareBrowserView.tsx":"22","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/square/components/SquareMobileView.tsx":"23","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/square/components/NonPlayerObject.tsx":"24","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/components/TMViewer.tsx":"25","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/photoBooth/components/PBTitle.tsx":"26","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/photoBooth/components/PBIntro.tsx":"27","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/photoBooth/components/PBUpload.tsx":"28","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/photoBooth/components/PBComponents.tsx":"29","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/photoBooth/components/PBViewer.tsx":"30"},{"size":647,"mtime":1700527817987,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1700527817988,"results":"33","hashOfConfig":"32"},{"size":242,"mtime":1702544862892,"results":"34","hashOfConfig":"32"},{"size":1285,"mtime":1702018926295,"results":"35","hashOfConfig":"32"},{"size":216,"mtime":1700527817986,"results":"36","hashOfConfig":"32"},{"size":305,"mtime":1700527817986,"results":"37","hashOfConfig":"32"},{"size":259,"mtime":1700527817986,"results":"38","hashOfConfig":"32"},{"size":261,"mtime":1700527817986,"results":"39","hashOfConfig":"32"},{"size":567,"mtime":1702862449152,"results":"40","hashOfConfig":"32"},{"size":417,"mtime":1700532563404,"results":"41","hashOfConfig":"32"},{"size":702,"mtime":1702545150235,"results":"42","hashOfConfig":"32"},{"size":297,"mtime":1700532563403,"results":"43","hashOfConfig":"32"},{"size":1348,"mtime":1700532563403,"results":"44","hashOfConfig":"32"},{"size":976,"mtime":1702545150236,"results":"45","hashOfConfig":"32"},{"size":806,"mtime":1702616437122,"results":"46","hashOfConfig":"32"},{"size":683,"mtime":1702616437122,"results":"47","hashOfConfig":"32"},{"size":696,"mtime":1702603488020,"results":"48","hashOfConfig":"32"},{"size":1532,"mtime":1702616437123,"results":"49","hashOfConfig":"32"},{"size":4893,"mtime":1702616437123,"results":"50","hashOfConfig":"32"},{"size":522,"mtime":1702603489550,"results":"51","hashOfConfig":"32"},{"size":548,"mtime":1702616437123,"results":"52","hashOfConfig":"32"},{"size":2264,"mtime":1702616437122,"results":"53","hashOfConfig":"32"},{"size":587,"mtime":1702545150236,"results":"54","hashOfConfig":"32"},{"size":760,"mtime":1702616437122,"results":"55","hashOfConfig":"32"},{"size":3053,"mtime":1702880970094,"results":"56","hashOfConfig":"32"},{"size":696,"mtime":1702862449153,"results":"57","hashOfConfig":"32"},{"size":1497,"mtime":1702863746937,"results":"58","hashOfConfig":"32"},{"size":4900,"mtime":1702862449153,"results":"59","hashOfConfig":"32"},{"size":592,"mtime":1702881202032,"results":"60","hashOfConfig":"32"},{"size":6582,"mtime":1702889459876,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"1kpgqrx",{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"65"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"65"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"65"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"65"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"65"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"65"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"65"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/index.tsx",[],[],["161","162","163","164","165","166"],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/reportWebVitals.ts",[],[],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/App.tsx",[],[],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/common/router/routes.tsx",[],[],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/common/components/SuspenseLazy.tsx",[],[],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/common/components/NotFound.tsx",[],[],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/common/components/MobileViewInfo.tsx",[],[],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/common/components/BrowserViewInfo.tsx",[],[],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/photoBooth/PhotoBooth.tsx",["167","168"],[],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toAvatar/ToAvatar.tsx",[],[],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/square/Square.tsx",[],[],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/apis/square/AxiosRequestsSquare.ts",[],[],["169","170","171","172","173","174"],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/apis/square/AxiosInstanceSquare.ts",[],[],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/square/components/SocketManager.tsx",["175"],[],"import { useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport useCharacterStore from \"../stores/characterStore\";\nimport { ICharacter } from \"../data/CharacterData\";\n\nexport const socket = io(`${process.env.REACT_APP_SOCKET_SERVER_URL}`);\n\nexport const SocketManager = () => {\n  const setCharacters = useCharacterStore((state) => state.setCharacters);\n\n  useEffect(() => {\n    const onConnect = () => {\n      console.log(\"connected\");\n    };\n    const onDisconnect = () => {\n      console.log(\"disconnected\");\n    };\n    const onCharacters = (characters: ICharacter[]) => {\n      setCharacters(characters);\n      console.log(characters);\n    };\n\n    socket.on(\"connect\", onConnect);\n    socket.on(\"disconnect\", onDisconnect);\n    socket.on(\"characters\", onCharacters);\n\n    return () => {\n      socket.off(\"connect\", onConnect);\n      socket.off(\"disconnect\", onDisconnect);\n      socket.off(\"characters\", onCharacters);\n    };\n  }, []);\n\n  return <></>;\n};\n","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/square/stores/characterStore.ts",[],[],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/square/components/Character.tsx",[],[],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/components/TMTitle.tsx",["176","177","178"],[],"import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport logo_image from \"../../../assets/images/Mingle_AI_BI_v1_20231114_white.png\";\n\nfunction Header() {\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n  const location = useLocation();\n\n  return (\n    <header\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n      <h1>\n        <a href={location[\"pathname\"]} rel=\"noreferrer\">\n          <img\n            src={logo_image}\n            alt=\"Title\"\n            style={{ width: 94 }}\n            onClick={() => {}}\n          />\n        </a>\n      </h1>\n    </header>\n  );\n}\n\nexport default Header;\n","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/components/TMIntro.tsx",["179","180","181"],[],"import { useState, useEffect } from \"react\";\nimport { Title, Description } from \"modules/toMesh/components/TMComponents\";\nimport banner_image from \"../../../assets/images/test_images/Banner.png\";\nimport Desktop_Booth from \"modules/toMesh/components/TMUpload\";\n\nfunction Banner() {\n  return (\n    <header>\n      <h1>\n        <img\n          src={banner_image}\n          style={{\n            margin: \"10%\",\n            width: \"80%\",\n          }}\n          alt=\"Title\"\n        />\n      </h1>\n    </header>\n  );\n}\n\nfunction Desktop_Title() {\n  const [page, setPage] = useState(\"TITLE\");\n\n  const title_page = (\n    <>\n      <Title val=\"Take your photo into 3D Mesh\" />\n      <Description\n        val=\"\n      We build the AI model to generate a high-quality 3D model from a single\n      picture within 3 minutes. You can try our model in this demo webpage with\n      minimum effort. Don't hesitate it.\"\n      />\n      <input\n        type=\"button\"\n        value=\"Start\"\n        style={{\n          inlineSize: \"90%\",\n          fontSize: 36,\n          marginTop: 30,\n          margin: \"5%\",\n          background: \"#98FA4B\",\n          borderRadius: 20,\n          height: 70,\n          width: \"90%\",\n        }}\n        onClick={() => {\n          setPage(\"UPLOAD\");\n        }}\n      />\n      <Banner />\n    </>\n  );\n\n  const booth_page = <div />;\n\n  return (\n    <div className=\"App\">\n      {page === \"TITLE\" ? title_page : <></>}{\" \"}\n      {page === \"UPLOAD\" ? <Desktop_Booth /> : <></>}{\" \"}\n    </div>\n  );\n}\n\nexport default Desktop_Title;\n","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/components/TMUpload.tsx",["182"],[],"import { useState } from \"react\";\nimport React from \"react\";\nimport \"../styles/tmUpload.css\";\nimport { Title, Description } from \"modules/toMesh/components/TMComponents\";\nimport Viewer from \"modules/toMesh/components/TMViewer\";\n\nfunction Desktop_Booth() {\n  let content = null;\n  const [selectedID, setSelectedId] = useState<number>(-1);\n  const [page, setPage] = useState(\"SELECTION\");\n  const [myImage, setMyImage] = useState<string[]>([]);\n\n  const addImage = (e: React.ChangeEvent<any>) => {\n    const nowSelectImageList = e.target.files;\n    const nowImageURLList: string[] = [];\n\n    for (let i = 0; i < nowSelectImageList.length; i += 1) {\n      const nowImageUrl = URL.createObjectURL(nowSelectImageList[i]);\n      nowImageURLList.push(nowImageUrl);\n    }\n\n    setMyImage(nowImageURLList);\n    setPage(\"SELECTED\");\n  };\n\n  const handleDeleteImage = (id: number) => {\n    setMyImage(myImage.filter((_, index) => index !== id));\n    setPage(\"SELECTION\");\n  };\n\n  const selection = (\n    <>\n      <div\n        style={{\n          width: \"100%\",\n          color: \"white\",\n        }}\n      >\n        <Title val=\"Upload just a single picture\" />\n        <Description\n          val=\"Your photo will be discarded after 3D model generation safely. We do\n          not collect your information identifiable.\"\n        />\n      </div>\n      <div\n        style={{\n          color: \"white\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: \"100%\",\n        }}\n      >\n        <label\n          htmlFor=\"input-file\"\n          onChange={addImage}\n          style={{\n            color: \"white\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <div\n            style={{\n              width: \"355px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              height: \"584px\",\n              backgroundColor: \"white\",\n              borderRadius: 48,\n              fontSize: 100,\n              opacity: \"50%\",\n            }}\n          >\n            <div\n              style={{\n                top: 400,\n                color: \"black\",\n                position: \"absolute\",\n              }}\n            >\n              ⬆\n            </div>\n          </div>\n\n          <input\n            type=\"file\"\n            multiple={false}\n            id=\"input-file\"\n            style={{ display: \"none\" }}\n            accept=\".jpg, .jpeg, .png\"\n          />\n        </label>\n      </div>\n    </>\n  );\n\n  const selected = (\n    <div className=\"preview\" style={{}}>\n      <div\n        style={{\n          width: \"100%\",\n          color: \"white\",\n        }}\n      >\n        <Title val=\"Awesome photo!\" />\n        <Description\n          val=\"Your photo will be discarded after 3D model generation safely. We do\n          not collect your information identifiable.\"\n        />\n      </div>\n      <div\n        onClick={() => {\n          if (selectedID !== -1) {\n            setSelectedId(-1);\n          }\n        }}\n      >\n        {myImage.map((image, id) => (\n          <>\n            <img\n              src={image}\n              alt={`${image}-${id}`}\n              style={{\n                margin: \"2%\",\n                width: myImage.length <= 1 ? \"95%\" : \"27%\",\n                border: \"2px solid skyblue\",\n                borderRadius: 15,\n              }}\n              onClick={(event) => {\n                if (selectedID !== id) {\n                  event.stopPropagation();\n                  setSelectedId(id);\n                }\n              }}\n            />\n            <input\n              type=\"button\"\n              value=\"X\"\n              style={{\n                width: 30,\n                height: 30,\n                position: \"absolute\",\n                marginTop: \"2%\",\n                marginLeft: \"-10%\",\n                display: id === selectedID ? \"\" : \"none\",\n                borderRadius: 40,\n                background: \"#98FA4B\",\n              }}\n              onClick={() => {\n                handleDeleteImage(id);\n              }}\n            />\n          </>\n        ))}\n        <div>\n          <input\n            type=\"button\"\n            value=\"Generate!\"\n            style={{\n              width: \"80%\",\n              height: 70,\n              position: \"fixed\",\n              bottom: 0,\n              margin: \"10%\",\n              borderRadius: 30,\n              backgroundColor: \"yellowgreen\",\n              fontSize: 24,\n              color: \"black\",\n            }}\n            onClick={() => {\n              setPage(\"GENERATE\");\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      {page === \"SELECTION\" ? selection : <></>}\n      {page === \"SELECTED\" ? selected : <></>}\n      {page === \"GENERATE\" ? <Viewer /> : <></>}\n    </>\n  );\n}\n\nexport default Desktop_Booth;\n","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/components/TMComponents.tsx",[],[],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/ToMesh.tsx",["183"],[],"import \"./styles/ToMesh.css\";\nimport React from \"react\";\nimport { BrowserView, MobileOnlyView } from \"react-device-detect\";\nimport Desktop_Title from \"modules/toMesh/components/TMIntro\";\nimport Header from \"modules/toMesh/components/TMTitle\";\n\nconst ToMesh = () => {\n  return (\n    <>\n      <Header></Header>\n      <BrowserView>\n        <h1 style={{ color: \"white\" }}>Coming Soon</h1>\n      </BrowserView>\n      <MobileOnlyView>\n        <h1>\n          <Desktop_Title />\n        </h1>\n      </MobileOnlyView>\n    </>\n  );\n};\n\nexport default ToMesh;\n","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/square/components/SquareBrowserView.tsx",["184"],[],"import React, { useEffect, useRef } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport {\n  CameraControls,\n  ContactShadows,\n  Environment,\n  OrbitControls,\n} from \"@react-three/drei\";\nimport useCharacterStore from \"../stores/characterStore\";\nimport Character from \"./Character\";\nimport { Euler, Vector3 } from \"three\";\nimport NonPlayerObject from \"./NonPlayerObject\";\n\nconst SquareBrowserView = () => {\n  const cameraControlRef = useRef<CameraControls | null>(null);\n  const characters = useCharacterStore((state) => state.characters);\n  const nonPlayerObjects = useCharacterStore((state) => state.nonPlayerObjects);\n\n  useEffect(() => {\n    console.log(characters);\n    console.log(nonPlayerObjects);\n  }, [characters, nonPlayerObjects]);\n\n  return (\n    <Canvas>\n      <CameraControls ref={cameraControlRef} />\n      <color attach=\"background\" args={[\"#cccccc\"]} />\n      <Environment preset=\"sunset\" />\n      <ambientLight intensity={0.3} />\n      <ContactShadows blur={2} />\n      <OrbitControls />\n      {/* {characters.map((character, idx) => (\n        <Character\n          key={character.id}\n          socketID={character.socketID}\n          characterURI={character.characterURI}\n          position={\n            new Vector3(\n              character.position.x,\n              character.position.y,\n              character.position.z\n            )\n          }\n          rotation={\n            new Euler(\n              character.rotation.x,\n              character.rotation.y,\n              character.rotation.z\n            )\n          }\n        />\n      ))} */}\n      {nonPlayerObjects.map((nonPlayerObject, idx) => (\n        <NonPlayerObject\n          key={nonPlayerObject.uuid}\n          uuid={nonPlayerObject.uuid}\n          characterURI={nonPlayerObject.characterURI}\n          position={\n            new Vector3(\n              nonPlayerObject.position.x,\n              nonPlayerObject.position.y,\n              nonPlayerObject.position.z\n            )\n          }\n          rotation={\n            new Euler(\n              nonPlayerObject.rotation.x,\n              nonPlayerObject.rotation.y,\n              nonPlayerObject.rotation.z\n            )\n          }\n        />\n      ))}\n    </Canvas>\n  );\n};\n\nexport default SquareBrowserView;\n","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/square/components/SquareMobileView.tsx",[],[],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/square/components/NonPlayerObject.tsx",["185"],[],"import React, { useEffect, useRef } from \"react\";\nimport { Mesh } from \"three\";\nimport { useGLTF } from \"@react-three/drei\";\nimport { INonPlayerObject } from \"../data/NonPlayerObjectData\";\nimport { socket } from \"./SocketManager\";\n\nconst NonPlayerObject = (props: INonPlayerObject) => {\n  const meshRef = useRef<Mesh>(null!);\n  const gltf = useGLTF(props.characterURI);\n  const model = gltf.scene.clone();\n\n  useEffect(() => {\n    console.log(props.uuid);\n    socket.emit(\"nonPlayerObjects\", props);\n  }, [props.uuid]);\n\n  return (\n    <mesh\n      {...props}\n      ref={meshRef}\n      key={props.uuid}\n      position={props.position}\n      rotation={props.rotation}\n    >\n      <primitive object={model} />\n    </mesh>\n  );\n};\n\nexport default NonPlayerObject;\n","/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/toMesh/components/TMViewer.tsx",["186","187"],[],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/photoBooth/components/PBTitle.tsx",["188","189","190"],[],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/photoBooth/components/PBIntro.tsx",["191","192","193"],[],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/photoBooth/components/PBUpload.tsx",["194"],[],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/photoBooth/components/PBComponents.tsx",["195"],[],"/Users/parkjaesung/Documents/GitHub/mingle_ai_web/src/modules/photoBooth/components/PBViewer.tsx",["196","197","198"],[],{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":13,"column":11,"nodeType":"213","messageId":"214","endLine":13,"endColumn":28},{"ruleId":"211","severity":1,"message":"212","line":18,"column":11,"nodeType":"213","messageId":"214","endLine":18,"endColumn":28},{"ruleId":"199","replacedBy":"215"},{"ruleId":"201","replacedBy":"216"},{"ruleId":"203","replacedBy":"217"},{"ruleId":"205","replacedBy":"218"},{"ruleId":"207","replacedBy":"219"},{"ruleId":"209","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":32,"column":6,"nodeType":"223","endLine":32,"endColumn":8,"suggestions":"224"},{"ruleId":"225","severity":1,"message":"226","line":1,"column":20,"nodeType":"227","messageId":"228","endLine":1,"endColumn":29},{"ruleId":"225","severity":1,"message":"229","line":6,"column":10,"nodeType":"227","messageId":"228","endLine":6,"endColumn":20},{"ruleId":"225","severity":1,"message":"230","line":6,"column":22,"nodeType":"227","messageId":"228","endLine":6,"endColumn":35},{"ruleId":"225","severity":1,"message":"226","line":1,"column":20,"nodeType":"227","messageId":"228","endLine":1,"endColumn":29},{"ruleId":"225","severity":1,"message":"231","line":56,"column":9,"nodeType":"227","messageId":"228","endLine":56,"endColumn":19},{"ruleId":"211","severity":1,"message":"232","line":61,"column":28,"nodeType":"213","messageId":"214","endLine":61,"endColumn":45},{"ruleId":"225","severity":1,"message":"233","line":8,"column":7,"nodeType":"227","messageId":"228","endLine":8,"endColumn":14},{"ruleId":"211","severity":1,"message":"212","line":16,"column":11,"nodeType":"213","messageId":"214","endLine":16,"endColumn":28},{"ruleId":"225","severity":1,"message":"234","line":10,"column":8,"nodeType":"227","messageId":"228","endLine":10,"endColumn":17},{"ruleId":"221","severity":1,"message":"235","line":15,"column":6,"nodeType":"223","endLine":15,"endColumn":18,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":12,"column":9,"nodeType":"213","endLine":12,"endColumn":77},{"ruleId":"237","severity":1,"message":"238","line":85,"column":11,"nodeType":"213","endLine":85,"endColumn":77},{"ruleId":"225","severity":1,"message":"226","line":1,"column":20,"nodeType":"227","messageId":"228","endLine":1,"endColumn":29},{"ruleId":"225","severity":1,"message":"229","line":6,"column":10,"nodeType":"227","messageId":"228","endLine":6,"endColumn":20},{"ruleId":"225","severity":1,"message":"230","line":6,"column":22,"nodeType":"227","messageId":"228","endLine":6,"endColumn":35},{"ruleId":"225","severity":1,"message":"226","line":1,"column":20,"nodeType":"227","messageId":"228","endLine":1,"endColumn":29},{"ruleId":"225","severity":1,"message":"231","line":51,"column":9,"nodeType":"227","messageId":"228","endLine":51,"endColumn":19},{"ruleId":"211","severity":1,"message":"232","line":56,"column":28,"nodeType":"213","messageId":"214","endLine":56,"endColumn":45},{"ruleId":"225","severity":1,"message":"233","line":8,"column":7,"nodeType":"227","messageId":"228","endLine":8,"endColumn":14},{"ruleId":"225","severity":1,"message":"239","line":2,"column":8,"nodeType":"227","messageId":"228","endLine":2,"endColumn":18},{"ruleId":"237","severity":1,"message":"238","line":39,"column":11,"nodeType":"213","endLine":45,"endColumn":13},{"ruleId":"237","severity":1,"message":"238","line":110,"column":11,"nodeType":"213","endLine":110,"endColumn":77},{"ruleId":"237","severity":1,"message":"238","line":155,"column":11,"nodeType":"213","endLine":158,"endColumn":13},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["240"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"react/jsx-pascal-case","Imported JSX component Desktop_Title must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase",[],[],[],["240"],[],[],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCharacters'. Either include it or remove the dependency array.","ArrayExpression",["241"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'innerWidth' is assigned a value but never used.","'setInnerWidth' is assigned a value but never used.","'booth_page' is assigned a value but never used.","Imported JSX component Desktop_Booth must be in PascalCase or SCREAMING_SNAKE_CASE","'content' is assigned a value but never used.","'Character' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["242"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'test_image' is defined but never used.","no-object-constructor",{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},"Update the dependencies array to be: [setCharacters]",{"range":"247","text":"248"},"Update the dependencies array to be: [props, props.uuid]",{"range":"249","text":"250"},[951,953],"[setCharacters]",[505,517],"[props, props.uuid]"]